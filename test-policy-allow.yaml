kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cert-manager-policy:allowed-for-one-domain
  namespace: gm-poc
rules:
- apiGroups: ["policy.cert-manager.io"]
  resources: ["certificaterequestpolicies"]
  verbs: ["use"]
  resourceNames: ["allowed-for-one-domain"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cert-manager-policy:allowed-for-one-domain
  namespace: gm-poc
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-policy:allowed-for-one-domain
subjects:
# Policy intended to be used with a Certificate resource, so cert-manager is
# the user creating CertificateRequest. Bind to the cert-manager
# ServiceAccount.
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
 name: sample2.sitaram-iyer-gcp.jetstacker.net
 namespace: gm-poc
spec:
 secretName: sample2.sitaram-iyer-gcp.jetstacker.net
 dnsNames:
   - sample2.sitaram-iyer-gcp.jetstacker.net
 commonName: sample2.sitaram-iyer-gcp.jetstacker.net
 issuerRef:
   group: cert-manager.io
   name: letsencrypt-prod
   kind: Issuer
---
# Here we match on all requests created by anyone. The policy contains an
# impossible condition and so will always return denied. This ensures all
# requests will be denied by default unless another policy permits the request.
apiVersion: policy.cert-manager.io/v1alpha1
kind: CertificateRequestPolicy
metadata:
  name: deny-all
  namespace: cert-manager
spec:
  allowed:
    dnsNames:
      values: []
      required: true
  selector:
    issuerRef: {}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cert-manager-policy:deny-all
rules:
- apiGroups: ["policy.cert-manager.io"]
  resources: ["certificaterequestpolicies"]
  verbs: ["use"]
  resourceNames: ["deny-all"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cert-manager-policy:deny-all
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-policy:deny-all
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:authenticated
---
apiVersion: policy.cert-manager.io/v1alpha1
kind: CertificateRequestPolicy
metadata:
  name: allowed-for-one-domain
  namespace: gm-poc
spec:
  allowed:
    dnsNames:
      values:
      - "sample3.sitaram-iyer-gcp.jetstacker.net"
  selector:
    issuerRef:
      name: letsencrypt-prod
      kind: Issuer
      group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
 name: sample3.sitaram-iyer-gcp.jetstacker.net
 namespace: gm-poc
spec:
 secretName: sample3.sitaram-iyer-gcp.jetstacker.net
 dnsNames:
   - sample3.sitaram-iyer-gcp.jetstacker.net
 commonName: sample3.sitaram-iyer-gcp.jetstacker.net
 issuerRef:
   name: letsencrypt-prod
   kind: Issuer
   group: cert-manager.io
---
